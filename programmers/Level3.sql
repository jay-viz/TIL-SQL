-- 오랜 기간 보호한 동물(1)
SELECT ins.NAME, ins.DATETIME
FROM ANIMAL_INS AS ins
LEFT JOIN ANIMAL_OUTS AS outs
ON ins.ANIMAL_ID = outs.ANIMAL_ID
WHERE outs.DATETIME is null
ORDER BY ins.DATETIME
LIMIT 3


-- 오랜 기간 보호한 동물(2)
SELECT outs.ANIMAL_ID, outs.NAME
FROM ANIMAL_INS AS ins
LEFT JOIN ANIMAL_OUTS AS outs
ON ins.ANIMAL_ID = outs.ANIMAL_ID
ORDER BY DATEDIFF(outs.DATETIME, ins.DATETIME) DESC
LIMIT 2


-- 있었는데요 없었습니다
SELECT outs.ANIMAL_ID, outs.NAME
FROM ANIMAL_INS AS ins
LEFT JOIN ANIMAL_OUTS AS outs
ON ins.ANIMAL_ID = outs.ANIMAL_ID
WHERE outs.DATETiME < ins.DATETIME
ORDER BY ins.DATETIME


-- 카테고리 별 도서 판매량 집계하기
SELECT CATEGORY, 
    SUM(SALES) AS TOTAL_SALES
FROM BOOK as b
LEFT JOIN BOOK_SALES as s
ON b.BOOK_ID = s.BOOK_ID
WHERE LEFT(s.SALES_DATE,7) = '2022-01'
GROUP BY b.CATEGORY
ORDER BY 1


-- 조건별로 분류하여 주문상태 출력하기
SELECT ORDER_ID, 
    PRODUCT_ID, 
    DATE_FORMAT(OUT_DATE,'%Y-%m-%d') AS 'OUT_DATE',
    CASE WHEN OUT_DATE <= '2022-05-01' THEN '출고완료'
      WHEN OUT_DATE > '2022-05-01' THEN '출고대기'
      ELSE '출고미정' END
      AS '출고여부'
FROM FOOD_ORDER 
ORDER BY ORDER_ID


-- 없어진 기록 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_OUTS
WHERE ANIMAL_ID NOT IN (SELECT ANIMAL_ID FROM ANIMAL_INS)
ORDER BY ANIMAL_ID


-- 즐겨찾기가 가장 많은 식당 정보 출력하기
SELECT r.FOOD_TYPE, r.REST_ID, r.REST_NAME, MAX(r.FAVORITES) AS FAVORITES
FROM REST_INFO AS r
JOIN (SELECT FOOD_TYPE, MAX(FAVORITES) as FAVORITES
      FROM REST_INFO
    GROUP BY FOOD_TYPE ) AS m
ON r.FOOD_TYPE = m.FOOD_TYPE and r.FAVORITES = m.FAVORITES
GROUP BY FOOD_TYPE
ORDER BY FOOD_TYPE DESC


-- 조건에 맞는 사용자와 총 거래금액 조회하기
SELECT WRITER_ID, u.NICKNAME, SUM(PRICE) AS 'TOTAL_SALES'
FROM USED_GOODS_BOARD AS b
JOIN USED_GOODS_USER AS u ON b.WRITER_ID = u.USER_ID
WHERE b.STATUS = 'DONE'
GROUP BY WRITER_ID
HAVING TOTAL_SALES >= 700000
ORDER BY TOTAL_SALES


-- 대여 기록이 존재하는 자동차 리스트 구하기
SELECT c.CAR_ID
FROM CAR_RENTAL_COMPANY_CAR AS c
JOIN (SELECT CAR_ID, START_DATE
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY 
    WHERE DATE_FORMAT(START_DATE, '%m') = 10) AS h ON c.CAR_ID = h.CAR_ID
WHERE CAR_TYPE = '세단'
GROUP BY CAR_ID
ORDER BY CAR_ID DESC

SELECT distinct(c.CAR_ID)
FROM CAR_RENTAL_COMPANY_CAR AS c, CAR_RENTAL_COMPANY_RENTAL_HISTORY AS h
WHERE c.CAR_ID=h.CAR_ID and CAR_TYPE = '세단' and DATE_FORMAT(START_DATE, '%m') = 10
ORDER BY c.CAR_ID DESC


-- 조건에 맞는 사용자 정보 조회하기
SELECT WRITER_ID, 
    NICKNAME,
    CONCAT_WS(" ", CITY, STREET_ADDRESS1, STREET_ADDRESS2) AS 전체주소, 
    CONCAT_WS("-", LEFT(TLNO,3), SUBSTRING(TLNO,4,4), RIGHT(TLNO,4)) AS 전화번호
FROM USED_GOODS_BOARD AS b
JOIN USED_GOODS_USER AS u ON b.WRITER_ID = u.USER_ID
GROUP BY WRITER_ID
HAVING COUNT(BOARD_ID)>=3
ORDER BY WRITER_ID DESC


-- 자동차 대여 기록에서 대여중 / 대여 가능 여부 구분하기
SELECT a.CAR_ID, IFNULL(b.AVAILABILITY, "대여 가능") AS AVAILABILITY
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY AS a
LEFT JOIN 
    (SELECT CAR_ID, 
         CASE WHEN '2022-10-16' BETWEEN START_DATE AND END_DATE THEN '대여중' 
         END AS AVAILABILITY
     FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
     GROUP BY HISTORY_ID
     HAVING AVAILABILITY='대여중'
    ) AS b 
    ON a.CAR_ID= b.CAR_ID
GROUP BY CAR_ID
ORDER BY CAR_ID DESC


-- 헤비 유저가 소유한 장소
SELECT *
FROM PLACES 
WHERE HOST_ID in (SELECT HOST_ID FROM PLACES
    GROUP BY HOST_ID
    HAVING COUNT(HOST_ID)>1)
ORDER BY ID


-- 조회수가 가장 많은 중고거래 게시판의 첨부파일 조회하기
SELECT CONCAT('/home/grep/src/',BOARD_ID,"/",FILE_ID,FILE_NAME,FILE_EXT) AS FILE_PATH
FROM USED_GOODS_FILE 
WHERE BOARD_ID = (SELECT BOARD_ID FROM USED_GOODS_BOARD
                  ORDER BY VIEWS DESC
                  LIMIT 1)
ORDER BY FILE_ID DESC


-- 대여 횟수가 많은 자동차들의 월별 대여 횟수 구하기
SELECT MONTH(START_DATE) AS MONTH,
    CAR_ID, 
    COUNT(HISTORY_ID) AS RECORDS
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY 
WHERE START_DATE BETWEEN '2022-08-01' and '2022-10-31'
    and CAR_ID IN (SELECT CAR_ID
                    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
                    WHERE START_DATE BETWEEN '2022-08-01' and '2022-10-31'
                    GROUP BY CAR_ID
                    HAVING COUNT(*) >=5)
GROUP BY MONTH, CAR_ID
ORDER BY MONTH, CAR_ID DESC
